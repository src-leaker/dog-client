package fr.dog.module.impl.exploit;

import fr.dog.event.annotations.SubscribeEvent;
import fr.dog.event.impl.player.PlayerNetworkTickEvent;
import fr.dog.module.Module;
import fr.dog.module.ModuleCategory;
import fr.dog.property.impl.BooleanProperty;
import fr.dog.property.impl.NumberProperty;
import fr.dog.util.packet.PacketUtil;
import fr.dog.util.player.MoveUtil;
import net.minecraft.item.ItemBow;
import net.minecraft.item.ItemFood;
import net.minecraft.item.ItemPotion;
import net.minecraft.item.ItemSword;
import net.minecraft.network.play.client.C03PacketPlayer;


public class FastUse extends Module {

    private final BooleanProperty PotionOnly = BooleanProperty.newInstance("Pot only", false);
    private final NumberProperty timer = NumberProperty.newInstance("Timer", 0.1f, 0.5f, 1f, 0.1f);
    private final NumberProperty packet = NumberProperty.newInstance("Packet", 1f, 1f, 32f, 1f);

    public FastUse() {
        super("FastUse", ModuleCategory.EXPLOIT);
        this.registerProperties(PotionOnly, timer,packet);
    }
    @SubscribeEvent
    private void onPre(PlayerNetworkTickEvent e) {
        if (mc.thePlayer.isUsingItem() && mc.thePlayer.inventory.getCurrentItem() != null && !(mc.thePlayer.inventory.getCurrentItem().getItem() instanceof ItemBow) && !(mc.thePlayer.inventory.getCurrentItem().getItem() instanceof ItemSword) && canFastUse()) {
            mc.timer.timerSpeed = timer.getValue();
            for (int i = 0; i < packet.getValue(); i++) {
                PacketUtil.sendPacket(new C03PacketPlayer(mc.thePlayer.onGround));
            }
        } else {
            mc.timer.timerSpeed = 1f;
        }
    }
    private boolean canFastUse() {
        if (PotionOnly.getValue()) {
            return MoveUtil.moving() && mc.thePlayer.inventory.getCurrentItem() != null && mc.thePlayer.inventory.getCurrentItem().getItem() instanceof ItemPotion && !(mc.thePlayer.inventory.getCurrentItem().getItem() instanceof ItemFood);
        } else {
            return MoveUtil.moving() && mc.thePlayer.inventory.getCurrentItem() != null && !(mc.thePlayer.inventory.getCurrentItem().getItem() instanceof ItemBow) && !(mc.thePlayer.inventory.getCurrentItem().getItem() instanceof ItemSword);
        }
    }
}